    Аннотации в Java – это специальный механизм со своим синтаксисом, позволяющий добавлять в код метаданные.
                       Какую-то дополнительную информацию, которую затем можно прочитать из исходного кода, class-файлов или получить в рантайме,
                       то есть во время работы программы. Сами по себе аннотации на код никак не влияют, в этом смысле они подобны комментариям.
                       Все действия происходят в коде, который ищет аннотации и на их основе меняет поведение.

    @RestController = @Controller — стереотип/псевдоним для аннотации @Component, означающий,
                      что при запуске приложения из этого класса образуется компонент Spring,
                      создаваемый и управляемый контейнером инверсии управления (inversion of
                      control, IoC) в приложении. Классы, снабженные аннотацией @Controller, включают объект Model для передачи слою представления данных,
                      соответствующих модели, и отображения (совместно с ViewResolver) приложением конкретного
                      представления с помощью специальной технологии.
                      Можно также указать классу, снабженному аннотацией Controller, возвращать
                      ответ в формате нотации объектов JavaScript (JSON) или другом ориентированном на данные формате, например XML, посредством добавления к классу
                      или методу аннотации @ResponseBody (по умолчанию JSON). В результате
                      в возвращаемое методом значение входит все тело ответа на веб-запрос вместо
                      лишь части Model
                      Удобная аннотация @RestController сочетает в себе аннотации @Controller и @ResponseBody, упрощая тем самым код


    @GetMapping = это специализированная аннотация @RequestMapping, предусмотренная конкретно для обработки HTTP GET-запросов,
                  что придаёт коду лаконичность и читаемость


